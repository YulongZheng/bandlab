{"ast":null,"code":"export default {\n  data() {\n    return {\n      ctx: ''\n    };\n  },\n  mounted() {},\n  methods: {\n    play(what) {\n      this.stop();\n      this.ctx = new AudioContext();\n      let audio;\n      fetch(what).then(data => data.arrayBuffer()).then(arrayBuffer => this.ctx.decodeAudioData(arrayBuffer)).then(decodedAudio => {\n        audio = decodedAudio;\n        const playSound = this.ctx.createBufferSource();\n        playSound.buffer = audio;\n        playSound.connect(this.ctx.destination);\n        playSound.start(this.ctx.currentTime);\n      });\n    },\n    stop() {\n      const playSound = this.ctx.createBufferSource();\n      playSound.pause();\n    }\n  }\n};","map":{"version":3,"mappings":"AAUA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,GAAG,EAAE;IACP,CAAC;EACH,CAAC;EACDC,OAAO,GAAG,CAAC,CAAC;EACZC,OAAO,EAAE;IACPC,IAAI,CAACC,IAAI,EAAE;MACT,IAAI,CAACC,IAAI,EAAC;MACV,IAAI,CAACL,GAAE,GAAI,IAAIM,YAAY,EAAE;MAC7B,IAAIC,KAAK;MACTC,KAAK,CAACJ,IAAI,EACPK,IAAI,CAAEV,IAAI,IAAKA,IAAI,CAACW,WAAW,EAAE,EACjCD,IAAI,CAAEC,WAAW,IAAK,IAAI,CAACV,GAAG,CAACW,eAAe,CAACD,WAAW,CAAC,EAC3DD,IAAI,CAAEG,YAAY,IAAK;QACtBL,KAAI,GAAIK,YAAY;QACpB,MAAMC,SAAQ,GAAI,IAAI,CAACb,GAAG,CAACc,kBAAkB,EAAE;QAC/CD,SAAS,CAACE,MAAK,GAAIR,KAAK;QACxBM,SAAS,CAACG,OAAO,CAAC,IAAI,CAAChB,GAAG,CAACiB,WAAW,CAAC;QACvCJ,SAAS,CAACK,KAAK,CAAC,IAAI,CAAClB,GAAG,CAACmB,WAAW,CAAC;MACvC,CAAC,CAAC;IACN,CAAC;IACDd,IAAI,GAAE;MACJ,MAAMQ,SAAQ,GAAI,IAAI,CAACb,GAAG,CAACc,kBAAkB,EAAE;MAC/CD,SAAS,CAACO,KAAK,EAAE;IACnB;EACF;AACF,CAAC","names":["data","ctx","mounted","methods","play","what","stop","AudioContext","audio","fetch","then","arrayBuffer","decodeAudioData","decodedAudio","playSound","createBufferSource","buffer","connect","destination","start","currentTime","pause"],"sourceRoot":"","sources":["/Users/yulong/Desktop/bandlab/src/views/pageTwo.vue"],"sourcesContent":["<template>\n  <div class=\"page-2\">\n    <div class=\"flex-row\" style=\"justify-content: space-around\">\n      <button @click.prevent=\"play('./music/new-wave-kit.ogg')\">play music 1</button>\n      <button @click.prevent=\"play('./music/synth-organ.ogg')\">play music 2</button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      ctx: ''\n    };\n  },\n  mounted() {},\n  methods: {\n    play(what) {\n      this.stop()\n      this.ctx = new AudioContext();\n      let audio;\n      fetch(what)\n        .then((data) => data.arrayBuffer())\n        .then((arrayBuffer) => this.ctx.decodeAudioData(arrayBuffer))\n        .then((decodedAudio) => {\n          audio = decodedAudio;\n          const playSound = this.ctx.createBufferSource();\n          playSound.buffer = audio;\n          playSound.connect(this.ctx.destination);\n          playSound.start(this.ctx.currentTime);\n        });\n    },\n    stop(){\n      const playSound = this.ctx.createBufferSource();\n      playSound.pause();\n    }\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}